openapi: 3.0.2
info:
  title: Bibliotopia Storage API
  version: 1.0.0
  description: API for uploading files to different storages
  contact:
    name: Vitalii Fedyk
    email: fedykvitalik2004@gmail.com
paths:
  /storage:
    post:
      summary: Upload a file to a specified storage backend
      operationId: uploadFile
      parameters:
        - $ref: '#/components/parameters/XAppName'
      tags:
        - Storage
      requestBody:
        $ref: '#/components/requestBodies/UploadFileDto'
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
  /storage/{fileId}:
    get:
      summary: Get a file information by its ID
      operationId: findById
      parameters:
        - $ref: '#/components/parameters/XAppName'
        - $ref: '#/components/parameters/fileId'
      tags:
        - Storage
      responses:
        '200':
          description: File retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadResponse'
        '404':
          description: File not found
  /storage/download:
    get:
      summary: Download a ZIP file
      parameters:
        - $ref: '#/components/parameters/XAppName'
      operationId: downloadZip
      tags:
        - Storage
      responses:
        '200':
          description: ZIP file
          content:
            application/zip:
              schema:
                type: string
                format: binary
  /generation/barcodes/{isbn}:
    post:
      summary: Generate and save a barcode image for an ISBN
      operationId: generateBarcode
      parameters:
        - name: isbn
          in: path
          required: true
          description: ISBN-13 code to generate a barcode for
          schema:
            type: string
            pattern: '^[0-9]{13}$'
      tags:
        - Generation
      responses:
        '200':
          description: Barcode generated and stored successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    example: "Url"
        '400':
          description: Invalid ISBN
components:
  parameters:
    XAppName:
      name: X-App-Name
      description: Name of the application making the request. It is required
      in: header
      schema:
        type: string
    fileId:
      name: fileId
      in: path
      description: The unique ID of the file
      required: true
      schema:
        type: string
        format: uuid
  requestBodies:
    UploadFileDto:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            required:
              - file
            properties:
              file:
                type: string
                format: binary
                description: The file to upload
  schemas:
   FileUploadResponse:
     type: object
     required:
       - id
       - bucketName
       - objectName
       - url
       - createdAt
     properties:
       id:
         type: string
         format: uuid
         description: Id
       bucketName:
         type: string
         description: App name
       objectName:
         type: string
         description: Key of the file
       url:
         type: string
         format: string
         description: Public or signed URL to access the object. It is temporary.
       createdAt:
         type: string
         format: date-time
         description: ISO 8601/RFC 3339 timestamp with timezone (e.g., 2025-09-07T18:25:43+03:00)