services:
  app:
    build:
      context: .
      dockerfile: Dockerfile-app
    ports:
      - "8090:8080"
  sonar_db:
    image: postgres:16
    container_name: sonar_db
    environment:
      POSTGRES_USER: sonaruser
      POSTGRES_PASSWORD: sonarpwd
      POSTGRES_DB: sonar
    volumes:
      - sonar_db_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U sonaruser -d sonar" ]
      interval: 10s
      retries: 5
      timeout: 5s
  sonarqube:
    image: sonarqube:24.12.0.100206-community
    container_name: sonarqube
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar_db:5432/sonar
      SONAR_JDBC_USERNAME: sonaruser
      SONAR_JDBC_PASSWORD: sonarpwd
    depends_on:
      sonar_db:
        condition: service_healthy
    ports:
      - "9001:9000"
    restart: unless-stopped
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9090:9000"
      - "9091:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

volumes:
  sonar_db_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  minio_data: