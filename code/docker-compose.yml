services:
  app:
    build:
      context: .
      dockerfile: Dockerfile-app
    ports:
      - "8090:8080"
  sonarqube:
    image: sonarqube:10-community
    container_name: sonarqube
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar_db:5432/sonar
      SONAR_JDBC_USERNAME: sonaruser
      SONAR_JDBC_PASSWORD: sonarpwd
      SONAR_TOKEN: 0198e7f7-d30c-72d6-958f-cfe6e1227307
    ports:
      - "9001:9000"
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    restart: unless-stopped
    depends_on:
      sonar_db:
        condition: service_healthy

  sonar_db:
    image: postgres:13
    container_name: sonar_db
    environment:
      POSTGRES_USER: sonaruser
      POSTGRES_PASSWORD: sonarpwd
      POSTGRES_DB: sonar
    volumes:
      - sonar_db_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonaruser -d sonar"]
      interval: 10s
      timeout: 6s
      retries: 5

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonar_db_data: